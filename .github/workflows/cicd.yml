---

    name: cicd

    on:
        push:
            branches: [main]
        pull_request:
            branches: [main]

    jobs:
        build:
            runs-on: ubuntu-latest
            steps:
                - uses: actions/checkout@v3
                - name: Set up Golang
                  uses: actions/setup-go@v3
                  with:
                      go-version: '>=1.21.0'
                - name: Setup Golang caches
                  uses: actions/cache@v3
                  with:
                      path: |
                          ~/.cache/go-build
                          ~/go/pkg/mod
                      key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
                      restore-keys: |
                          ${{ runner.os }}-golang-
                - run: go version
                - name: Build
                  run: go build -v ./...
        test:
            runs-on: ubuntu-latest
            steps:
                - uses: actions/checkout@v3
                - name: Set up Golang
                  uses: actions/setup-go@v3
                  with:
                      go-version: '>=1.21.0'
                - name: Setup Golang caches
                  uses: actions/cache@v3
                  with:
                      path: |
                          ~/.cache/go-build
                          ~/go/pkg/mod
                      key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
                      restore-keys: |
                          ${{ runner.os }}-golang-
                - run: go version
                - name: Test
                  run: go test -v ./...
        remote-ssh-command:
            if: github.event_name == 'push' && (github.ref == 'refs/heads/main')
            needs: [build, test]
            runs-on: ubuntu-latest
            steps:
                - name: executing remote ssh commands using ssh key
                  uses: appleboy/ssh-action@master
                  with:
                      host: ${{ secrets.HOST }}
                      username: ${{ secrets.USERNAME }}
                      key: ${{ secrets.KEY }}
                      port: ${{ secrets.PORT }}
                      script: |
                          cd ~/backend
                          git fetch && git reset --hard
